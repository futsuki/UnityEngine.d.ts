declare namespace UnityEngine {
  class Physics {
    // constructors
    constructor();
    // methods
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number, layerMask: number): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any): boolean;
    static Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static Raycast(ray: UnityEngine.Ray, maxDistance: number, layerMask: number): boolean;
    static Raycast(ray: UnityEngine.Ray, maxDistance: number): boolean;
    static Raycast(ray: UnityEngine.Ray): boolean;
    static Raycast(ray: UnityEngine.Ray, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static Raycast(ray: UnityEngine.Ray, hitInfo: any, maxDistance: number, layerMask: number): boolean;
    static Raycast(ray: UnityEngine.Ray, hitInfo: any, maxDistance: number): boolean;
    static Raycast(ray: UnityEngine.Ray, hitInfo: any): boolean;
    static Raycast(ray: UnityEngine.Ray, hitInfo: any, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static RaycastAll(ray: UnityEngine.Ray, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
    static RaycastAll(ray: UnityEngine.Ray, maxDistance: number): UnityEngine.RaycastHit[];
    static RaycastAll(ray: UnityEngine.Ray): UnityEngine.RaycastHit[];
    static RaycastAll(ray: UnityEngine.Ray, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
    static RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
    static RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layermask: number): UnityEngine.RaycastHit[];
    static RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number): UnityEngine.RaycastHit[];
    static RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
    static RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
    static RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[], maxDistance: number): number;
    static RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[]): number;
    static RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layermask: number): number;
    static RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number): number;
    static RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
    static Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, layerMask: number): boolean;
    static Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3): boolean;
    static Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, hitInfo: any, layerMask: number): boolean;
    static Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, hitInfo: any): boolean;
    static Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, hitInfo: any, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static OverlapSphere(position: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.Collider[];
    static OverlapSphere(position: UnityEngine.Vector3, radius: number, layerMask: number): UnityEngine.Collider[];
    static OverlapSphere(position: UnityEngine.Vector3, radius: number): UnityEngine.Collider[];
    static OverlapSphereNonAlloc(position: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static OverlapSphereNonAlloc(position: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number): number;
    static OverlapSphereNonAlloc(position: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[]): number;
    static OverlapCapsule(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.Collider[];
    static OverlapCapsule(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, layerMask: number): UnityEngine.Collider[];
    static OverlapCapsule(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number): UnityEngine.Collider[];
    static OverlapCapsuleNonAlloc(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static OverlapCapsuleNonAlloc(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number): number;
    static OverlapCapsuleNonAlloc(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[]): number;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number, layerMask: number): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any): boolean;
    static CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static SphereCast(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number, layerMask: number): boolean;
    static SphereCast(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number): boolean;
    static SphereCast(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any): boolean;
    static SphereCast(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, hitInfo: any, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, maxDistance: number): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, hitInfo: any, maxDistance: number, layerMask: number): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, hitInfo: any, maxDistance: number): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, hitInfo: any): boolean;
    static SphereCast(ray: UnityEngine.Ray, radius: number, hitInfo: any, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
    static CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layermask: number): UnityEngine.RaycastHit[];
    static CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number): UnityEngine.RaycastHit[];
    static CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
    static CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layermask: number): number;
    static CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number): number;
    static CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
    static SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
    static SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number): UnityEngine.RaycastHit[];
    static SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
    static SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
    static SphereCastAll(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
    static SphereCastAll(ray: UnityEngine.Ray, radius: number, maxDistance: number): UnityEngine.RaycastHit[];
    static SphereCastAll(ray: UnityEngine.Ray, radius: number): UnityEngine.RaycastHit[];
    static SphereCastAll(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
    static SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
    static SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number): number;
    static SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
    static SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
    static SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[], maxDistance: number): number;
    static SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[]): number;
    static SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static CheckSphere(position: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static CheckSphere(position: UnityEngine.Vector3, radius: number, layerMask: number): boolean;
    static CheckSphere(position: UnityEngine.Vector3, radius: number): boolean;
    static CheckCapsule(start: UnityEngine.Vector3, end: UnityEngine.Vector3, radius: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static CheckCapsule(start: UnityEngine.Vector3, end: UnityEngine.Vector3, radius: number, layermask: number): boolean;
    static CheckCapsule(start: UnityEngine.Vector3, end: UnityEngine.Vector3, radius: number): boolean;
    static CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layermask: number): boolean;
    static CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): boolean;
    static CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3): boolean;
    static OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.Collider[];
    static OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layerMask: number): UnityEngine.Collider[];
    static OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): UnityEngine.Collider[];
    static OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3): UnityEngine.Collider[];
    static OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[], orientation: UnityEngine.Quaternion, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[], orientation: UnityEngine.Quaternion, layerMask: number): number;
    static OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[], orientation: UnityEngine.Quaternion): number;
    static OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[]): number;
    static BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
    static BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layermask: number): UnityEngine.RaycastHit[];
    static BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number): UnityEngine.RaycastHit[];
    static BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): UnityEngine.RaycastHit[];
    static BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
    static BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion, maxDistance: number, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
    static BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion, maxDistance: number, layermask: number): number;
    static BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion, maxDistance: number): number;
    static BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion): number;
    static BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, orientation: UnityEngine.Quaternion, maxDistance: number): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, orientation: UnityEngine.Quaternion): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any): boolean;
    static BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, hitInfo: any, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
    static IgnoreCollision(collider1: UnityEngine.Collider, collider2: UnityEngine.Collider, ignore: boolean): any;
    static IgnoreCollision(collider1: UnityEngine.Collider, collider2: UnityEngine.Collider): any;
    static IgnoreLayerCollision(layer1: number, layer2: number, ignore: boolean): any;
    static IgnoreLayerCollision(layer1: number, layer2: number): any;
    static GetIgnoreLayerCollision(layer1: number, layer2: number): boolean;
    Equals(obj: any): boolean;
    GetHashCode(): number;
    GetType(): any;
    ToString(): string;
    // properties
    static gravity: UnityEngine.Vector3;
    static minPenetrationForPenalty: number;
    static defaultContactOffset: number;
    static bounceThreshold: number;
    static bounceTreshold: number;
    static sleepVelocity: number;
    static sleepAngularVelocity: number;
    static maxAngularVelocity: number;
    static defaultSolverIterations: number;
    static solverIterationCount: number;
    static defaultSolverVelocityIterations: number;
    static solverVelocityIterationCount: number;
    static sleepThreshold: number;
    static queriesHitTriggers: boolean;
    static queriesHitBackfaces: boolean;
    static penetrationPenaltyForce: number;
    // fields
    static IgnoreRaycastLayer: number;
    static kIgnoreRaycastLayer: number;
    static DefaultRaycastLayers: number;
    static kDefaultRaycastLayers: number;
    static AllLayers: number;
    static kAllLayers: number;
  }
}

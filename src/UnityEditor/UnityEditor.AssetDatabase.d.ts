declare namespace UnityEditor {
  class AssetDatabase extends System.Object {
    // constructors
    constructor();
    // methods
    static Contains(obj: UnityEngine.Object): boolean;
    static Contains(instanceID: number): boolean;
    static CreateFolder(parentFolder: string, newFolderName: string): string;
    static IsMainAsset(obj: UnityEngine.Object): boolean;
    static IsMainAsset(instanceID: number): boolean;
    static IsSubAsset(obj: UnityEngine.Object): boolean;
    static IsSubAsset(instanceID: number): boolean;
    static IsForeignAsset(obj: UnityEngine.Object): boolean;
    static IsForeignAsset(instanceID: number): boolean;
    static IsNativeAsset(obj: UnityEngine.Object): boolean;
    static IsNativeAsset(instanceID: number): boolean;
    static GenerateUniqueAssetPath(path: string): string;
    static StartAssetEditing(): void;
    static StopAssetEditing(): void;
    static ValidateMoveAsset(oldPath: string, newPath: string): string;
    static MoveAsset(oldPath: string, newPath: string): string;
    static RenameAsset(pathName: string, newName: string): string;
    static MoveAssetToTrash(path: string): boolean;
    static DeleteAsset(path: string): boolean;
    static ImportAsset(path: string, options: UnityEditor.ImportAssetOptions): void;
    static ImportAsset(path: string): void;
    static CopyAsset(path: string, newPath: string): boolean;
    static WriteImportSettingsIfDirty(path: string): boolean;
    static GetSubFolders(path: string): string[];
    static IsValidFolder(path: string): boolean;
    static CreateAsset(asset: UnityEngine.Object, path: string): void;
    static AddObjectToAsset(objectToAdd: UnityEngine.Object, path: string): void;
    static AddObjectToAsset(objectToAdd: UnityEngine.Object, assetObject: UnityEngine.Object): void;
    static GetAssetPath(assetObject: UnityEngine.Object): string;
    static GetAssetPath(instanceID: number): string;
    static GetAssetOrScenePath(assetObject: UnityEngine.Object): string;
    static GetTextMetaFilePathFromAssetPath(path: string): string;
    static GetAssetPathFromTextMetaFilePath(path: string): string;
    static LoadAssetAtPath(assetPath: string, type: any): UnityEngine.Object;
    static LoadMainAssetAtPath(assetPath: string): UnityEngine.Object;
    static GetMainAssetTypeAtPath(assetPath: string): any;
    static IsMainAssetAtPathLoaded(assetPath: string): boolean;
    static LoadAllAssetRepresentationsAtPath(assetPath: string): UnityEngine.Object[];
    static LoadAllAssetsAtPath(assetPath: string): UnityEngine.Object[];
    static GetAllAssetPaths(): string[];
    static RefreshDelayed(options: UnityEditor.ImportAssetOptions): void;
    static RefreshDelayed(): void;
    static Refresh(options: UnityEditor.ImportAssetOptions): void;
    static Refresh(): void;
    static OpenAsset(instanceID: number, lineNumber: number): boolean;
    static OpenAsset(instanceID: number): boolean;
    static OpenAsset(target: UnityEngine.Object): boolean;
    static OpenAsset(target: UnityEngine.Object, lineNumber: number): boolean;
    static OpenAsset(objects: UnityEngine.Object[]): boolean;
    static AssetPathToGUID(path: string): string;
    static GUIDToAssetPath(guid: string): string;
    static GetAssetDependencyHash(path: string): any;
    static SaveAssets(): void;
    static GetCachedIcon(path: string): any;
    static SetLabels(obj: UnityEngine.Object, labels: string[]): void;
    static GetLabels(obj: UnityEngine.Object): string[];
    static ClearLabels(obj: UnityEngine.Object): void;
    static GetAllAssetBundleNames(): string[];
    GetAssetBundleNames(): string[];
    static GetUnusedAssetBundleNames(): string[];
    static RemoveAssetBundleName(assetBundleName: string, forceRemove: boolean): boolean;
    static RemoveUnusedAssetBundleNames(): void;
    static GetAssetPathsFromAssetBundle(assetBundleName: string): string[];
    static GetAssetPathsFromAssetBundleAndAssetName(assetBundleName: string, assetName: string): string[];
    static GetAssetBundleDependencies(assetBundleName: string, recursive: boolean): string[];
    static GetDependencies(pathName: string): string[];
    static GetDependencies(pathName: string, recursive: boolean): string[];
    static GetDependencies(pathNames: string[]): string[];
    static GetDependencies(pathNames: string[], recursive: boolean): string[];
    static ExportPackage(assetPathName: string, fileName: string): void;
    static ExportPackage(assetPathName: string, fileName: string, flags: UnityEditor.ExportPackageOptions): void;
    static ExportPackage(assetPathNames: string[], fileName: string, flags: UnityEditor.ExportPackageOptions): void;
    static ExportPackage(assetPathNames: string[], fileName: string): void;
    static ImportPackage(packagePath: string, interactive: boolean): void;
    static IsOpenForEdit(assetObject: UnityEngine.Object): boolean;
    static IsOpenForEdit(assetOrMetaFilePath: string): boolean;
    static IsOpenForEdit(assetObject: UnityEngine.Object, message: any): boolean;
    static IsOpenForEdit(assetOrMetaFilePath: string, message: any): boolean;
    static IsMetaFileOpenForEdit(assetObject: UnityEngine.Object): boolean;
    static IsMetaFileOpenForEdit(assetObject: UnityEngine.Object, message: any): boolean;
    static GetBuiltinExtraResource(type: any, path: string): UnityEngine.Object;
    static GetTextMetaDataPathFromAssetPath(path: string): string;
    static FindAssets(filter: string): string[];
    static FindAssets(filter: string, searchInFolders: string[]): string[];
    // properties
    // fields
  }
}

declare namespace UnityEditor {
  class PlayerSettings extends UnityEngine.Object {
    // constructors
    constructor();
    // methods
    static SetPropertyInt(name: string, value: number, target: UnityEditor.BuildTargetGroup): void;
    static SetPropertyInt(name: string, value: number): void;
    static SetPropertyInt(name: string, value: number, target: UnityEditor.BuildTarget): void;
    static GetPropertyInt(name: string, target: UnityEditor.BuildTargetGroup): number;
    static GetPropertyInt(name: string): number;
    static GetPropertyOptionalInt(name: string, value: any): boolean;
    static GetPropertyOptionalInt(name: string, value: any, target: UnityEditor.BuildTargetGroup): boolean;
    static SetPropertyBool(name: string, value: boolean, target: UnityEditor.BuildTargetGroup): void;
    static SetPropertyBool(name: string, value: boolean): void;
    static SetPropertyBool(name: string, value: boolean, target: UnityEditor.BuildTarget): void;
    static GetPropertyBool(name: string, target: UnityEditor.BuildTargetGroup): boolean;
    static GetPropertyBool(name: string): boolean;
    static GetPropertyOptionalBool(name: string, value: any): boolean;
    static GetPropertyOptionalBool(name: string, value: any, target: UnityEditor.BuildTargetGroup): boolean;
    static SetPropertyString(name: string, value: string, target: UnityEditor.BuildTargetGroup): void;
    static SetPropertyString(name: string, value: string): void;
    static SetPropertyString(name: string, value: string, target: UnityEditor.BuildTarget): void;
    static GetPropertyString(name: string, target: UnityEditor.BuildTargetGroup): string;
    static GetPropertyString(name: string): string;
    static GetPropertyOptionalString(name: string, value: any): boolean;
    static GetPropertyOptionalString(name: string, value: any, target: UnityEditor.BuildTargetGroup): boolean;
    static HasAspectRatio(aspectRatio: UnityEditor.AspectRatio): boolean;
    static SetAspectRatio(aspectRatio: UnityEditor.AspectRatio, enable: boolean): void;
    static GetIconsForTargetGroup(platform: UnityEditor.BuildTargetGroup): any[];
    static SetIconsForTargetGroup(platform: UnityEditor.BuildTargetGroup, icons: any[]): void;
    static GetIconSizesForTargetGroup(platform: UnityEditor.BuildTargetGroup): number[];
    static GetGraphicsAPIs(platform: UnityEditor.BuildTarget): any[];
    static SetGraphicsAPIs(platform: UnityEditor.BuildTarget, apis: any[]): void;
    static GetUseDefaultGraphicsAPIs(platform: UnityEditor.BuildTarget): boolean;
    static SetUseDefaultGraphicsAPIs(platform: UnityEditor.BuildTarget, automatic: boolean): void;
    static GetScriptingDefineSymbolsForGroup(targetGroup: UnityEditor.BuildTargetGroup): string;
    static SetScriptingDefineSymbolsForGroup(targetGroup: UnityEditor.BuildTargetGroup, defines: string): void;
    static GetArchitecture(targetGroup: UnityEditor.BuildTargetGroup): number;
    static SetArchitecture(targetGroup: UnityEditor.BuildTargetGroup, architecture: number): void;
    static GetScriptingBackend(targetGroup: UnityEditor.BuildTargetGroup): UnityEditor.ScriptingImplementation;
    static SetScriptingBackend(targetGroup: UnityEditor.BuildTargetGroup, backend: UnityEditor.ScriptingImplementation): void;
    static GetIncrementalIl2CppBuild(targetGroup: UnityEditor.BuildTargetGroup): boolean;
    static SetIncrementalIl2CppBuild(targetGroup: UnityEditor.BuildTargetGroup, enabled: boolean): void;
    static GetAdditionalIl2CppArgs(): string;
    static SetAdditionalIl2CppArgs(additionalArgs: string): void;
    static GetStackTraceLogType(logType: any): any;
    static SetStackTraceLogType(logType: any, stackTraceType: any): void;
    // properties
    static companyName: string;
    static productName: string;
    static showUnitySplashScreen: boolean;
    static splashScreenStyle: UnityEditor.SplashScreenStyle;
    static readonly cloudProjectId: string;
    static readonly productGUID: any;
    static colorSpace: any;
    static defaultScreenWidth: number;
    static defaultScreenHeight: number;
    static defaultWebScreenWidth: number;
    static defaultWebScreenHeight: number;
    static displayResolutionDialog: UnityEditor.ResolutionDialogSetting;
    static defaultIsFullScreen: boolean;
    static defaultIsNativeResolution: boolean;
    static runInBackground: boolean;
    static captureSingleScreen: boolean;
    static usePlayerLog: boolean;
    static resizableWindow: boolean;
    static bakeCollisionMeshes: boolean;
    static useMacAppStoreValidation: boolean;
    static macFullscreenMode: UnityEditor.MacFullscreenMode;
    static d3d9FullscreenMode: UnityEditor.D3D9FullscreenMode;
    static d3d11FullscreenMode: UnityEditor.D3D11FullscreenMode;
    static virtualRealitySupported: boolean;
    static singlePassStereoRendering: boolean;
    static stereoRenderingPath: UnityEditor.StereoRenderingPath;
    static protectGraphicsMemory: boolean;
    static visibleInBackground: boolean;
    static allowFullscreenSwitch: boolean;
    static forceSingleInstance: boolean;
    static openGLRequireES31: boolean;
    static openGLRequireES31AEP: boolean;
    static resolutionDialogBanner: any;
    static virtualRealitySplashScreen: any;
    static iPhoneBundleIdentifier: string;
    static keystorePass: string;
    static keyaliasPass: string;
    static xboxTitleId: string;
    static readonly xboxImageXexFilePath: string;
    static readonly xboxSpaFilePath: string;
    static readonly xboxGenerateSpa: boolean;
    static readonly xboxEnableGuest: boolean;
    static readonly xboxDeployKinectResources: boolean;
    static xboxDeployKinectHeadOrientation: boolean;
    static xboxDeployKinectHeadPosition: boolean;
    static readonly xboxSplashScreen: any;
    static xboxAdditionalTitleMemorySize: number;
    static readonly xboxEnableKinect: boolean;
    static readonly xboxEnableKinectAutoTracking: boolean;
    static readonly xboxEnableSpeech: boolean;
    static readonly xboxSpeechDB: number;
    static gpuSkinning: boolean;
    static graphicsJobs: boolean;
    static readonly xboxPIXTextureCapture: boolean;
    static readonly xboxEnableAvatar: boolean;
    static readonly xboxOneResolution: number;
    static enableInternalProfiler: boolean;
    static actionOnDotNetUnhandledException: UnityEditor.ActionOnDotNetUnhandledException;
    static logObjCUncaughtExceptions: boolean;
    static enableCrashReportAPI: boolean;
    static bundleIdentifier: string;
    static bundleVersion: string;
    static statusBarHidden: boolean;
    static strippingLevel: UnityEditor.StrippingLevel;
    static stripEngineCode: boolean;
    static defaultInterfaceOrientation: UnityEditor.UIOrientation;
    static allowedAutorotateToPortrait: boolean;
    static allowedAutorotateToPortraitUpsideDown: boolean;
    static allowedAutorotateToLandscapeRight: boolean;
    static allowedAutorotateToLandscapeLeft: boolean;
    static useAnimatedAutorotation: boolean;
    static use32BitDisplayBuffer: boolean;
    static apiCompatibilityLevel: UnityEditor.ApiCompatibilityLevel;
    static stripUnusedMeshComponents: boolean;
    static readonly advancedLicense: boolean;
    static aotOptions: string;
    static defaultCursor: any;
    static cursorHotspot: any;
    static accelerometerFrequency: number;
    static MTRendering: boolean;
    static mobileMTRendering: boolean;
    static useDirect3D11: boolean;
    static stereoscopic3D: boolean;
    static muteOtherAudioSources: boolean;
    static alwaysDisplayWatermark: boolean;
    static firstStreamedLevelWithResources: number;
    static targetGlesGraphics: UnityEditor.TargetGlesGraphics;
    static targetIOSGraphics: UnityEditor.TargetIOSGraphics;
    static locationUsageDescription: string;
    static renderingPath: any;
    static mobileRenderingPath: any;
    // fields
  }
}
